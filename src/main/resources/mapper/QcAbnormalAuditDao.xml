<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tools.st.mapper.QcAbnormalAuditDao">

<resultMap id="BaseResultMap" type="com.tools.st.entity.QcAbnormalAudit">
  <id column="id" jdbcType="BIGINT" property="id"/>
  <result column="qc_id" jdbcType="BIGINT" property="qcId"/>
  <result column="audit_dept_id" jdbcType="BIGINT" property="auditDeptId"/>
  <result column="audit_user_id" jdbcType="BIGINT" property="auditUserId"/>
  <result column="audit_reason" jdbcType="VARCHAR" property="auditReason"/>
  <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime"/>
  <result column="cancelled" jdbcType="INTEGER" property="cancelled"/>
  <result column="enableflg" jdbcType="TINYINT" property="enableflg"/>
  <result column="created_by" jdbcType="BIGINT" property="createdBy"/>
  <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
  <result column="updated_by" jdbcType="BIGINT" property="updatedBy"/>
  <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
  <result column="audit_result_code" jdbcType="VARCHAR" property="auditResultCode"/>
</resultMap>

<sql id="Base_Column_List">
  id, qc_id, audit_dept_id, audit_user_id, audit_reason, submit_time, cancelled, 
  enableflg, created_by, created_time, updated_by, updated_time, audit_result_code
</sql>

<sql id="Condition_List">
  <if test="id != null"> qaa.id = #{id, jdbcType=BIGINT} </if>
  <if test="qcId != null"> qaa.qc_id = #{qcId, jdbcType=BIGINT} </if>
  <if test="auditDeptId != null"> qaa.audit_dept_id = #{auditDeptId, jdbcType=BIGINT} </if>
  <if test="auditUserId != null"> qaa.audit_user_id = #{auditUserId, jdbcType=BIGINT} </if>
  <if test="auditReason != null"> qaa.audit_reason = #{auditReason, jdbcType=VARCHAR} </if>
  <if test="submitTime != null"> qaa.submit_time = #{submitTime, jdbcType=TIMESTAMP} </if>
  <if test="cancelled != null"> qaa.cancelled = #{cancelled, jdbcType=INTEGER} </if>
  <if test="enableflg != null"> qaa.enableflg = #{enableflg, jdbcType=TINYINT} </if>
  <if test="createdBy != null"> qaa.created_by = #{createdBy, jdbcType=BIGINT} </if>
  <if test="createdTime != null"> qaa.created_time = #{createdTime, jdbcType=TIMESTAMP} </if>
  <if test="updatedBy != null"> qaa.updated_by = #{updatedBy, jdbcType=BIGINT} </if>
  <if test="updatedTime != null"> qaa.updated_time = #{updatedTime, jdbcType=TIMESTAMP} </if>
  <if test="auditResultCode != null"> qaa.audit_result_code = #{auditResultCode, jdbcType=VARCHAR} </if>
</sql>

<sql id="Select_As_List">
  qaa.id as id, qaa.qc_id as qcId, qaa.audit_dept_id as auditDeptId, qaa.audit_user_id as auditUserId, 
  qaa.audit_reason as auditReason, qaa.submit_time as submitTime, qaa.cancelled as cancelled, 
  qaa.enableflg as enableflg, qaa.created_by as createdBy, qaa.created_time as createdTime, 
  qaa.updated_by as updatedBy, qaa.updated_time as updatedTime, qaa.audit_result_code as auditResultCode
</sql>

<select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from qc_abnormal_audit
  where id = #{id,jdbcType=BIGINT}
</select>

<delete id="deleteByPrimaryKey" parameterType="Long">
  delete from qc_abnormal_audit
  where id = #{id,jdbcType=BIGINT}
</delete>

<insert id="insert" parameterType="com.tools.st.entity.QcAbnormalAudit">
  <selectKey keyProperty="id" order="AFTER" resultType="Long">
    SELECT LAST_INSERT_ID()
  </selectKey>
  insert into qc_abnormal_audit (qc_id, audit_dept_id, audit_user_id, audit_reason, 
                                 submit_time, cancelled, enableflg, created_by, 
                                 created_time, updated_by, updated_time, audit_result_code)
  values (#{qcId, jdbcType=BIGINT}, #{auditDeptId, jdbcType=BIGINT}, #{auditUserId, jdbcType=BIGINT}, 
          #{auditReason, jdbcType=VARCHAR}, #{submitTime, jdbcType=TIMESTAMP}, #{cancelled, jdbcType=INTEGER}, 
          #{enableflg, jdbcType=TINYINT}, #{createdBy, jdbcType=BIGINT}, #{createdTime, jdbcType=TIMESTAMP}, 
          #{updatedBy, jdbcType=BIGINT}, #{updatedTime, jdbcType=TIMESTAMP}, #{auditResultCode, jdbcType=VARCHAR})
</insert>

<update id="updateByPrimaryKey" parameterType="com.tools.st.entity.QcAbnormalAudit">
  update qc_abnormal_audit
  set qc_id=#{qcId, jdbcType=BIGINT}, audit_dept_id=#{auditDeptId, jdbcType=BIGINT}, 
      audit_user_id=#{auditUserId, jdbcType=BIGINT}, audit_reason=#{auditReason, jdbcType=VARCHAR}, 
      submit_time=#{submitTime, jdbcType=TIMESTAMP}, cancelled=#{cancelled, jdbcType=INTEGER}, 
      enableflg=#{enableflg, jdbcType=TINYINT}, created_by=#{createdBy, jdbcType=BIGINT}, 
      created_time=#{createdTime, jdbcType=TIMESTAMP}, updated_by=#{updatedBy, jdbcType=BIGINT}, 
      updated_time=#{updatedTime, jdbcType=TIMESTAMP}, audit_result_code=#{auditResultCode, jdbcType=VARCHAR}
  where id = #{id,jdbcType=BIGINT}
</update>

</mapper>