delimiters "$", "$"

import "typeMapping.stg"

myxml(tab, cols, keyCol, param, keyFields) ::= <<
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="$param.daoClzFullName$">

<resultMap id="BaseResultMap" type="$param.entityClzFullName$">
  <id column="$keyCol.name$" jdbcType="$keyCol.jdbcType$" property="$keyCol.javaName$"/>
  $cols:{col|$if(!col.key)$<result column="$col.name$" jdbcType="$col.jdbcType$" property="$col.javaName$"/>$endif$}; separator="\n"$
</resultMap>

<sql id="Base_Column_List">
  $cols:{col|`$col.name$`}; wrap, anchor, separator=", "$
</sql>

<sql id="Condition_List">
  $cols:{col|<if test="$col.javaName$ != null"> $tab.shortName$.$col.name$ = #{$col.javaName$, jdbcType=$col.jdbcType$\} </if>}; separator="\n"$
</sql>

<sql id="Select_As_List">
  $cols:{col|$tab.shortName$.$col.name$ as $col.javaName$}; wrap, anchor, separator=", "$
</sql>

<select id="selectByPrimaryKey" parameterType="$dbToJavaType.(keyCol.type)$" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from $tab.tableName$
  where $keyCol.name$ = #{$keyCol.javaName$,jdbcType=$dbToJdbcType.(keyCol.type)$}
</select>

<delete id="deleteByPrimaryKey" parameterType="$dbToJavaType.(keyCol.type)$">
  delete from $tab.tableName$
  where $keyCol.name$ = #{$keyCol.javaName$,jdbcType=$dbToJdbcType.(keyCol.type)$}
</delete>

<insert id="insert" parameterType="$param.entityClzFullName$" useGeneratedKeys="true" keyProperty="id">
  insert into $tab.tableName$ ($cols:{col|$if(!col.key)$`$col.name$`$endif$}; wrap, anchor, separator=", "$)
  values ($cols:{col|$if(!col.key)$#{$col.javaName$, jdbcType=$dbToJdbcType.(col.type)$\}$endif$}; wrap, anchor, separator=", "$)
</insert>

<update id="updateByPrimaryKey" parameterType="$param.entityClzFullName$">
  update $tab.tableName$
  set $cols:{col|$if(!col.key)$`$col.name$`=#{$col.javaName$, jdbcType=$dbToJdbcType.(col.type)$\}$endif$}; wrap, anchor, separator=", "$
  where $keyCol.name$ = #{$keyCol.javaName$,jdbcType=$dbToJdbcType.(keyCol.type)$}
</update>

<select id="findList" resultType="$param.voClzFullName$">
    select <include refid="Select_As_List" />,

    from $tab.tableName$ $tab.shortName$
    $keyFields:{key|left join $key.tabName$ $key.tabShortName$ on $tab.shortName$.id=$key.tabShortName$.$key.keyField$}; wrap, anchor, separator=", "$
    where $tab.shortName$.enableflg=1
    <if test="xxx != null"> and mwe.yyy >= #{xxx, jdbcType=TIMESTAMP} </if>
</select>
</mapper>
>>
